#!/bin/bash

normal=$(tput sgr0)
yellow=$(tput setaf 3)
red=$(tput setaf 1)

sync_files () {
    test -z "$1" && return
    rsync -e "ssh -S '$HOME/.ssh/$host.job2q.sock'" -ztvh --partial-dir=.rsyncpartdir --progress --files-from=- "$host":"\$JOBSYNCDIR/$USER.$HOSTNAME/" "$HOME" <<< "$1"
}

remove_files () {
    test -z "$1" && return
    { echo $red\Se encontraron los siguientes archivos $2 $host:$normal; echo "$1"; } | less -FXr
    while true; do
        read -n1 -p "${yellow}¿Desea proceder a eliminar estos archivos (y/n)?: $normal" answer
        echo
        case "$answer" in
          [yY])
            echo -n $yellow\Eliminando los archivos $2... $normal
            rsync -e "ssh -S '$HOME/.ssh/$host.job2q.sock'" -tv --files-from=- --remove-source-files "$host":"\$JOBSYNCDIR/$USER.$HOSTNAME/" "$HOME" <<< "$1" | sed -n 's,^.f......... ,,p'
            echo Hecho
            break;;
          [nN])
            echo No se eliminó ningún archivo
            break;;
        esac
    done
}

options=$(getopt -n "$0" -o '' -l force,clean -- "$@") || exit

eval "set -- $options"

while (( $# )); do
  case "$1" in
    --force) force=; shift;;
    --clean) clean=; shift;;
#    --exclude) expat=$2; shift 2;;
    --) shift; break;;
     *) echo Unknown option: $1; exit 1
  esac
done

if [[ -n $1 ]]; then
    host=$1
else
    echo $red\Debe especificar un servidor$normal
    exit
fi

ssh -o ControlMaster=auto -o ControlPersist=60 -S "$HOME/.ssh/$host.job2q.sock" "$host" exit
files=$(rsync -e "ssh -S '$HOME/.ssh/$host.job2q.sock'" -rntii --exclude='.*' "$host":"\$JOBSYNCDIR/$USER.$HOSTNAME/" "$HOME")

synced=$(echo "$files" | sed -n 's,^\.f          ,,p')
unsynced=$(echo "$files" | sed -n 's,^>f+++++++++ ,,p')
conflicting=$(echo "$files" | grep -v '^>f          ' | grep -v '^>f+++++++++ ' | sed -n 's,^>f......... ,,p')

#echo "$files"
#echo "$synced"
#echo "$unsynced"
#echo "$conflicting"
#exit

if [[ -n ${clean+?} ]]; then 
    if [[ -n ${force+?} ]]; then 
        if [[ -n $synced || -n $conflicting || -n $unsynced ]]; then
            remove_files "$synced" duplicados
            remove_files "$conflicting" conflictivos
            remove_files "$unsynced" remanentes
        else
            echo No hay archivos que eliminar
        fi
    else
        if [[ -n $unsynced ]]; then
            echo $red\No se limpió el host $host porque los siguientes archivos no se han sincronizado:$normal 
            echo "$unsynced"
            echo $yellow\Sincronícelos primero o use las opciones --clean y --force para eliminarlos$normal
        elif [[ -n $conflicting ]]; then
            echo $red\No se limpió el host $host porque hay conflictos entre las versiones locales y remotas de los siguientes archivos:$normal
            echo "$conflicting"
            echo $yellow\Use las opciones --force para sobreescribir las versiones locales o --clean y --force para eliminar las versiones remotas$normal
        elif [[ -n $synced ]]; then
            remove_files "$synced" duplicados
        else
            echo No hay archivos que eliminar
        fi
    fi
else
    if [[ -n ${force+?} ]]; then 
        if [[ -n $unsynced  || -n $conflicting ]]; then
            sync_files "$unsynced"
            sync_files "$conflicting"
        else
            echo No hay archivos que sincronizar
        fi
    else
        if [[ -n $unsynced  || -n $conflicting ]]; then
            if [[ -n $unsynced ]]; then
                sync_files "$unsynced"
                echo Sincronización completa
            fi
            if [[ -n $conflicting ]]; then
                echo $red\No se sincronizaron los siguientes archivos porque hay conflictos entre sus versiones locales y remotas:$normal
                echo "$conflicting"
                echo $yellow\Use las opciones --force para sobreescribir las versiones locales o --clean y --force para eliminar las versiones remotas$normal
            fi
        elif [[ -n $synced ]]; then
            echo $yellow\No hay archivos nuevos que sincronizar pero hay duplicados en $host, use la opción --clean para eliminarlos$normal
        else
            echo No hay archivos que sincronizar
        fi
    fi
fi

